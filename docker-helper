#!/bin/bash

usage() {
    printf "\n"
    echo "USAGE:"
    echo "create domain.com"
    echo "remove domain.com"
    echo "start domain.com"
    echo "stop domain.com"
    echo "ssh domain.com"
    echo "upgrade domain.com - upgrades a container"
    echo "bootstrap server - upgrades host and builds new images"
    echo "cleanup server - removes unused images"
    printf "\n"
}

waiting_for_services() {
    echo "...waiting for services to start..."
    while [ 1 ]
    do
        passwords=`docker logs $1 |& grep "Password for"`
        if [ ! -z "$passwords" ]
        then
            printf "\n"
            docker logs $1 |& grep "Password for"
            printf "\n"
            exit
        fi
        sleep 2
    done
}


if [ -z "$1" ] || [ -z "$2" ]; then
    usage
    exit 1
fi

COMMAND=$1
DOMAIN=$2

case "$DOMAIN" in
  proxy)
    docker rm -f proxy
    docker run -d -p 80:80 --name proxy -v /var/run/docker.sock:/tmp/docker.sock nginx-proxy
    exit 1
    ;;
esac

case "$COMMAND" in
  create)
    docker run -p 80 -e VIRTUAL_HOST=$DOMAIN --name $DOMAIN -d docker-wordpress-nginx
    waiting_for_services $DOMAIN
    ;;
  remove)
    docker rm -f $DOMAIN
    ;;
  start)
    docker start $DOMAIN
    waiting_for_services $DOMAIN
    ;;
  stop)
    docker stop $DOMAIN
    ;;
  ssh)
    IP=`docker inspect -f "{{ .NetworkSettings.IPAddress }}" $DOMAIN`
    ssh www@$IP
    ;;
  upgrade)
    echo -e "...stopping container..."
    docker stop $DOMAIN
    echo -e "...copying data..."
    docker run -p 80 --volumes-from $DOMAIN --name temp-for-upgrade -d ubuntu
    echo -e "...removing old container..."
    docker rm -f $DOMAIN
    echo -e "...starting new container..."
    docker run -p 80 -e VIRTUAL_HOST=$DOMAIN --volumes-from temp-for-upgrade --name $DOMAIN -d docker-wordpress-nginx
    echo -e "...removing temporary container..."
    docker rm -f temp-for-upgrade
    waiting_for_services $DOMAIN
    ;;
  bootstrap)
    sudo sh -c "wget -qO- https://get.docker.io/gpg | apt-key add -"
    sudo sh -c "echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
    sudo sh -c "apt-get update && apt-get -y upgrade"
    sudo sh -c "apt-get install -y lxc-docker git fail2ban"
    sudo sh -c "sed -i -e 's/DEFAULT_FORWARD_POLICY="DROP"/DEFAULT_FORWARD_POLICY="ACCEPT"/g' /etc/default/ufw"
    sudo sh -c "ufw allow 22 && ufw allow 80 && ufw --force enable"
    sudo sh -c "cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local && /etc/init/fail2ban restart"
    sudo sh -c "mkdir /srv"
    sudo sh -c "rm -rf /srv/docker-wordpress-nginx"
    sudo sh -c "rm -rf /srv/nginx-proxy"
    sudo sh -c "git clone https://github.com/amq/docker-wordpress-nginx.git /srv/docker-wordpress-nginx"
    sudo sh -c "git clone https://github.com/amq/nginx-proxy.git /srv/nginx-proxy"
    sudo sh -c "docker build --no-cache -t='docker-wordpress-nginx' /srv/docker-wordpress-nginx"
    sudo sh -c "docker build --no-cache -t='nginx-proxy' /srv/nginx-proxy"
    sudo sh -c "docker run -d -p 80:80 --name proxy -v /var/run/docker.sock:/tmp/docker.sock nginx-proxy"
    echo "...you can now add sites using './docker-helper create domain.com'..."
    ;;
  cleanup)
    docker images -q |xargs docker rmi
    echo "...cleanup done..."
    ;;
  *)
    usage
    exit 1
    ;;
esac
